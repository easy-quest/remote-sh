{"version":3,"sources":["component/common/SuspenseLoad.js","page/Index.js","App.js","util/common.js"],"names":["Suspense","children","Target","React","lazy","fallback","Page","history","path","SuspenseLoad","routerHistoryType","routingStore","RouterStore","plainHistory","configs","require","createHashHistory","createMemoryHistory","createBrowserHistory","syncHistoryWithStore","RootStore","getSingleInstance","router","setHistory","toast","configure","App"],"mappings":"mLAEMA,EAAW,kBAAM,MAMR,cAAmB,IAAhBC,EAAe,EAAfA,SACVC,EAASC,IAAMC,KAAKH,GAC1B,OACE,kBAAC,IAAMD,SAAP,CAAgBK,SAAU,kBAACL,EAAD,OACxB,kBAACE,EAAD,QCISI,MAZf,YAA4B,IAAZC,EAAW,EAAXA,QACd,OACE,kBAAC,IAAD,CAAQA,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAACC,EAAD,MAAe,kBAAM,2DCO/B,IARoBC,EAQdC,EAAe,IAAIC,cACnBC,EARsB,UADRH,EASYI,IAAQJ,mBAP7BK,EAAQ,KAAWC,oBACF,WAAtBN,EACKK,EAAQ,KAAWE,sBACrBF,EAAQ,KAAWG,uBAKtBX,EAAUY,+BAAqBN,EAAcF,GCZ1CS,IAAUC,oBDeTC,OAAOC,WAAWhB,GAE5BiB,IAAMC,YAMSC,UAJf,WACE,OAAO,kBAAC,EAAD,CAAMnB,QAASA","file":"static/js/6.f08b3452.chunk.js","sourcesContent":["import React from 'react';\n\nconst Suspense = () => null;\n\n/**\n * 封装了React.lazy的特性，实现分块加载chunks，减少首屏时间\n * @param {function} loader 形如：() => import('./foo/bar.jsx')\n */\nexport default ({ children }) => {\n  const Target = React.lazy(children);\n  return (\n    <React.Suspense fallback={<Suspense />}>\n      <Target />\n    </React.Suspense>\n  );\n};\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport SuspenseLoad from '../component/common/SuspenseLoad';\n\nfunction Page({ history }) {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\">\n          <SuspenseLoad>{() => import('./Home')}</SuspenseLoad>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Page;\n","import React from 'react';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport configs from './configs';\nimport { getRootStore } from './util/common';\nimport Page from './page/Index';\n\nfunction getHistory(routerHistoryType) {\n  if (routerHistoryType === 'hash')\n    return require('history').createHashHistory();\n  if (routerHistoryType === 'memory')\n    return require('history').createMemoryHistory();\n  return require('history').createBrowserHistory();\n}\n\nconst routingStore = new RouterStore();\nconst plainHistory = getHistory(configs.routerHistoryType);\nconst history = syncHistoryWithStore(plainHistory, routingStore);\nconst rootStore = getRootStore();\n\nrootStore.router.setHistory(history);\n\ntoast.configure();\n\nfunction App() {\n  return <Page history={history} />;\n}\n\nexport default App;\n","import RootStore from 'src/store/root';\n\n/**\n * @returns {RootStore}\n */\nexport function getRootStore() {\n  return RootStore.getSingleInstance();\n}\n\nexport function uuid() {\n  return require('shortid').generate();\n}\n"],"sourceRoot":""}